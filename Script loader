--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v110=v5(v81,v19);v19=nil;return v110;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/(2^(v32-(2 -1))))%(2^(((v33-(2 -1)) -(v32-((1 + 0) -0))) + (2 -1))) ;return v82-(v82%1) ;else local v83=619 -(555 + 64) ;local v84;while true do if (v83==(931 -(857 + (951 -(282 + 595))))) then v84=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v84 + v84))>=v84) and 1) or (0 + (1637 -(1523 + 114))) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (7 -4) );v18=v18 + (1274 -(226 + 1044)) ;return (v40 * (16441815 + 335401)) + (v39 * ((527488 -242118) -219834)) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -(0 + 0) ;local v44=(v20(v42,1 + 0 ,370 -(87 + 263) ) * (2^(212 -(67 + (412 -299))))) + v41 ;local v45=v20(v42,(74 -53) + 0 ,23 + 8 );local v46=((v20(v42,78 -46 )==((878 -(814 + 45)) -(10 + 8))) and  -(3 -2)) or (1 + 0) ;if (v45==0) then if (v44==(0 -0)) then return v46 * ((2345 -1393) -(802 + 150)) ;else local v89=0 -0 ;while true do if (v89==(0 -0)) then v45=1 + 0 ;v43=997 -(915 + 82) ;break;end end end elseif (v45==(36 + 615 + 1396)) then return ((v44==(0 -0)) and (v46 * (1/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1344 -321) ) * (v43 + (v44/((1189 -(1069 + 118))^(117 -65)))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(886 -(261 + 624)) );v18=v18 + v47 ;local v49={};for v64=1 -0 , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return 0 -0 ;end)();local v51=(function() return;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v50==0) then v51=(function() return function(v97,v98,v99) local v100=(function() return 0 + 0 ;end)();local v101=(function() return;end)();while true do if (v100==0) then v101=(function() return 1636 -(1373 + 263) ;end)();while true do if ((0 -0)==v101) then local v120=(function() return 675 -(534 + 141) ;end)();while true do if (v120==0) then v97[v98-#"!" ]=(function() return v99();end)();return v97,v98,v99;end end end end break;end end end;end)();v52=(function() return {};end)();v53=(function() return {};end)();v50=(function() return 1;end)();end if (v50~=1) then else local v87=(function() return 0 + 0 ;end)();while true do if (v87~=(1 + 0)) then else v56=(function() return v23();end)();v50=(function() return 2 + 0 ;end)();break;end if (v87~=(0 -0)) then else local v104=(function() return 1384 -(746 + 638) ;end)();while true do if (v104~=(0 -0)) then else v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v104=(function() return 2 -1 ;end)();end if (v104~=1) then else v87=(function() return 1;end)();break;end end end end end if (v50==(2 + 0)) then local v88=(function() return 0 + 0 ;end)();while true do if (v88==(1 + 0)) then v55[ #"19("]=(function() return v21();end)();v50=(function() return 3;end)();break;end if (v88==0) then v57=(function() return {};end)();for v111= #"[",v56 do local v112=(function() return 0;end)();local v113=(function() return;end)();local v114=(function() return;end)();local v115=(function() return;end)();while true do if (0==v112) then v113=(function() return 0;end)();v114=(function() return nil;end)();v112=(function() return 1 + 0 ;end)();end if (v112~=(397 -(115 + 281))) then else v115=(function() return nil;end)();while true do if (v113~=(0 -0)) then else local v124=(function() return 0 + 0 ;end)();local v125=(function() return;end)();while true do if (v124==(0 -0)) then v125=(function() return 0;end)();while true do if (v125==(0 -0)) then v114=(function() return v21();end)();v115=(function() return nil;end)();v125=(function() return 3 -2 ;end)();end if (v125~=(868 -(550 + 317))) then else v113=(function() return 1468 -(899 + 568) ;end)();break;end end break;end end end if (v113==(1 + 0)) then if (v114== #",") then v115=(function() return v21()~=(0 -0) ;end)();elseif (v114==(2 -0)) then v115=(function() return v24();end)();elseif (v114== #"91(") then v115=(function() return v25();end)();end v57[v111]=(function() return v115;end)();break;end end break;end end end v88=(function() return 291 -(60 + 230) ;end)();end end end if ((8 -5)~=v50) then else for v90= #"<",v23() do local v91=(function() return v21();end)();if (v20(v91, #">", #"}")~=(572 -(426 + 146))) then else local v106=(function() return 0 + 0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==(1459 -(282 + 1174))) then if (v20(v108, #"91(", #"-19")~= #"]") then else v109[ #"xnxx"]=(function() return v57[v109[ #"?id="]];end)();end v52[v90]=(function() return v109;end)();break;end if (v106==(286 -(134 + 151))) then local v117=(function() return 1665 -(970 + 695) ;end)();local v118=(function() return;end)();while true do if (v117~=(0 -0)) then else v118=(function() return 0 -0 ;end)();while true do if (v118==(1990 -(582 + 1408))) then local v128=(function() return 0;end)();while true do if (v128==0) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 -0)) then local v320=(function() return 1271 -(945 + 326) ;end)();local v321=(function() return;end)();while true do if ((0 -0)==v320) then v321=(function() return 0 -0 ;end)();while true do if (v321~=(1824 -(1195 + 629))) then else v109[ #"19("]=(function() return v22();end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v107== #",") then v109[ #"xnx"]=(function() return v23();end)();elseif (v107==(2 -0)) then v109[ #"nil"]=(function() return v23() -((2 + 0)^(257 -(187 + 54))) ;end)();elseif (v107== #"19(") then local v425=(function() return 780 -(162 + 618) ;end)();local v426=(function() return;end)();while true do if (v425~=(0 + 0)) then else v426=(function() return 0;end)();while true do if (v426~=(1500 -(1408 + 92))) then else v109[ #"xxx"]=(function() return v23() -(2^16) ;end)();v109[ #".com"]=(function() return v22();end)();break;end end break;end end end v128=(function() return 1 + 0 ;end)();end if (v128~=1) then else v118=(function() return 1289 -(993 + 295) ;end)();break;end end end if (1==v118) then v106=(function() return 1 + 1 ;end)();break;end end break;end end end if (v106==(1173 -(418 + 753))) then if (v20(v108, #"|", #"|")== #":") then v109[1 + 1 ]=(function() return v57[v109[2]];end)();end if (v20(v108,2 + 0 ,1 + 1 )== #" ") then v109[ #"-19"]=(function() return v57[v109[ #"xxx"]];end)();end v106=(function() return 1 + 2 ;end)();end if (v106==0) then local v119=(function() return 0 + 0 ;end)();while true do if (v119~=(0 -0)) then else v107=(function() return v20(v91,531 -(406 + 123) , #"19(");end)();v108=(function() return v20(v91, #"0836",6);end)();v119=(function() return 1770 -(1749 + 20) ;end)();end if (v119~=1) then else v106=(function() return 1;end)();break;end end end end end end for v92= #"]",v23() do v53,v92,v28=(function() return v51(v53,v92,v28);end)();end return v55;end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 ];local v62=v58[1324 -(1249 + 73) ];local v63=v58[2 + 1 ];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1146 -(155 + 311 + 679) ;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v85=0 -0 ,v74 do if (v85>=v68) then v72[v85-v68 ]=v73[v85 + 1 ];else v76[v85]=v73[v85 + (1901 -(106 + 1794)) ];end end local v77=(v74-v68) + 1 + 0 ;local v78;local v79;while true do local v86=0 + 0 + 0 ;while true do if ((3721>1148) and (v86==(0 -0))) then v78=v66[v70];v79=v78[(1098 -(709 + 387)) -(1859 -(673 + 1185)) ];v86=1;end if (v86==(115 -(4 + 110))) then if ((50<=3695) and (v79<=((1829 -1198) -(57 + 527)))) then if (v79<=((4656 -3206) -(41 + 1386))) then if (v79<=11) then if ((2270<4984) and (v79<=(108 -((27 -10) + 86)))) then if ((v79<=2) or (2833>4352)) then if ((v79<=(0 + 0 + 0)) or (3222<3073)) then v76[v78[3 -1 ]]=v78[3]~=(0 -0) ;elseif (v79>(167 -(122 + 33 + 11))) then local v201=v78[2 -0 ];local v202={};for v322=3 -2 , #v75 do local v323=v75[v322];for v359=0, #v323 do local v360=v323[v359];local v361=v360[1 + 0 ];local v362=v360[1 + 1 ];if ((v361==v76) and (v362>=v201)) then local v400=0 -0 ;while true do if ((744<=2942) and ((65 -(30 + 35))==v400)) then v202[v362]=v361[v362];v360[1 + 0 ]=v202;break;end end end end end else v76[v78[2]]=v76[v78[1260 -(1043 + 214) ]];end elseif (v79<=3) then v76[v78[2]]=v76[v78[11 -8 ]] * v76[v78[1216 -(323 + (1199 -310)) ]] ;elseif ((v79>4) or (1833<=1322)) then local v205=v78[5 -(1 + 2) ];v76[v205]=v76[v205](v13(v76,v205 + (581 -((719 -358) + 219)) ,v78[323 -(53 + 267) ]));else for v324=v78[1 + 1 ],v78[3] do v76[v324]=nil;end end elseif (v79<=8) then if (v79<=(419 -((29 -14) + 398))) then local v131=982 -(18 + 964) ;local v132;local v133;while true do if (v131==(1880 -(446 + 1434))) then v132=v78[2];v133=v76[v78[11 -8 ]];v131=1 + 0 ;end if ((v131==(1 + 0)) or (3467<=1055)) then v76[v132 + (851 -(20 + 830)) ]=v133;v76[v132]=v133[v78[4 + (1283 -(1040 + 243)) ]];break;end end elseif (v79==(133 -(116 + 10))) then local v207=0 + 0 ;local v208;local v209;local v210;local v211;while true do if (v207==((2205 -1466) -(542 + (2043 -(559 + 1288))))) then v71=(v210 + v208) -(1 -0) ;v211=0 + 0 ;v207=2 + 0 ;end if (0==v207) then v208=v78[1 + 1 ];v209,v210=v69(v76[v208](v13(v76,v208 + (2 -1) ,v71)));v207=2 -1 ;end if ((3541==3541) and (v207==(1553 -(1126 + 425)))) then for v401=v208,v71 do local v402=405 -(118 + 287) ;while true do if ((v402==(1931 -(609 + 1322))) or (3557>=4003)) then v211=v211 + (3 -2) ;v76[v401]=v209[v211];break;end end end break;end end else local v212=v78[1123 -(118 + 1003) ];local v213,v214=v69(v76[v212](v76[v212 + (2 -1) ]));v71=(v214 + v212) -(378 -(142 + 235)) ;local v215=454 -(13 + 441) ;for v331=v212,v71 do v215=v215 + (4 -3) ;v76[v331]=v213[v215];end end elseif (v79<=(33 -24)) then v76[v78[2]]=v78[1 + (5 -3) ]~=(977 -(553 + 424)) ;elseif (v79>(18 -8)) then local v216=0;local v217;local v218;local v219;while true do if ((v216==(0 + 0)) or (657>=1668)) then v217=v78[2 + 0 ];v218={v76[v217](v13(v76,v217 + 1 ,v78[2 + 1 ]))};v216=1 + 0 ;end if ((v216==(2 -1)) or (1027>3858)) then v219=(0 + 0) -0 ;for v403=v217,v78[4] do v219=v219 + 1 ;v76[v403]=v218[v219];end break;end end elseif ((v76[v78[2]]<=v78[8 -4 ]) or (3654<450)) then v70=v70 + 1 + 0 ;else v70=v78[3];end elseif (v79<=(82 -(236 -171))) then if (v79<=(767 -(239 + 514))) then if ((1891<4453) and (v79<=(5 + 7))) then local v135=1329 -(797 + 189 + 343) ;local v136;local v137;local v138;while true do if (v135==(1 + 0)) then v138=0 + 0 + 0 ;for v364=v136,v78[9 -5 ] do v138=v138 + (1203 -(373 + 829)) ;v76[v364]=v137[v138];end break;end if (v135==(731 -((1412 -936) + 255))) then v136=v78[1132 -(369 + 761) ];v137={v76[v136](v13(v76,v136 + 1 ,v71))};v135=1;end end elseif (v79==(23 -10)) then local v220=v78[2];v76[v220]=v76[v220](v76[v220 + (1 -0) ]);elseif (v76[v78[2]]~=v76[v78[242 -(64 + 96 + 78) ]]) then v70=v70 + 1 + 0 ;else v70=v78[3 -0 ];end elseif (v79<=(351 -(144 + 192))) then local v139=v78[218 -((76 -34) + 174) ];local v140=v78[4 + 0 ];local v141=v139 + 2 + 0 + 0 ;local v142={v76[v139](v76[v139 + (1505 -(363 + 1141)) ],v76[v141])};for v183=1581 -(1183 + 397) ,v140 do v76[v141 + v183 ]=v142[v183];end local v143=v142[2 -1 ];if v143 then v76[v141]=v143;v70=v78[3 + 0 ];else v70=v70 + 1 + 0 ;end elseif (v79==(1991 -(1913 + 62))) then local v224=0 + 0 ;local v225;local v226;while true do if (v224==(0 -0)) then v225=v78[1935 -(565 + 1368) ];v226=v76[v225];v224=3 -2 ;end if (((925 + 737) -(1477 + 133 + 51))==v224) then for v406=v225 + 1 ,v71 do v7(v226,v76[v406]);end break;end end else v76[v78[2 -0 ]]=v76[v78[3 + 0 ]][v76[v78[4]]];end elseif (v79<=(876 -(564 + 292))) then if (v79<=(16 + 2)) then local v144=0 -0 ;local v145;local v146;while true do if (v144==(0 -0)) then v145=v78[2];v146={};v144=305 -(239 + 5 + 60) ;end if ((v144==(1 + 0)) or (3140<2129)) then for v368=477 -(41 + (868 -(153 + 280))) , #v75 do local v369=0;local v370;while true do if (v369==0) then v370=v75[v368];for v418=1001 -(938 + (181 -118)) , #v370 do local v419=0 + 0 + 0 ;local v420;local v421;local v422;while true do if ((v419==1) or (2555<1240)) then v422=v420[1127 -(936 + 75 + 114) ];if ((v421==v76) and (v422>=v145)) then v146[v422]=v421[v422];v420[1 + 0 ]=v146;end break;end if (v419==(1613 -(1565 + 48))) then v420=v370[v418];v421=v420[1];v419=1 + 0 ;end end end break;end end end break;end end elseif ((v79==19) or (4727<=4722)) then local v229=v78[1140 -(782 + 356) ];local v230,v231=v69(v76[v229](v13(v76,v229 + (268 -(93 + 83 + 83 + 8)) ,v71)));v71=(v231 + v229) -((2 + 0) -(1 -0)) ;local v232=0 -0 ;for v336=v229,v71 do v232=v232 + (1093 -(975 + 117)) ;v76[v336]=v230[v232];end else v76[v78[1877 -(98 + 59 + 1718) ]]=v76[v78[3 + 0 ]] -v76[v78[14 -10 ]] ;end elseif ((740<4937) and (v79<=(688 -(89 + 578)))) then local v147=v78[10 -7 ];local v148=v76[v147];for v186=v147 + (1019 -(697 + 321)) ,v78[10 -6 ] do v148=v148   .. v76[v186] ;end v76[v78[3 -1 ]]=v148;elseif (v79==(50 -28)) then v76[v78[1 + 1 ]]=v76[v78[3]] * v76[v78[(5 + 1) -2 ]] ;else local v235=v78[5 -(5 -2) ];v76[v235](v76[v235 + (1228 -(322 + 905)) ]);end elseif (v79<=(646 -(602 + (1058 -(572 + 477))))) then if (v79<=((165 + 1053) -(449 + 740))) then if ((3658>=280) and (v79<=26)) then if (v79<=(896 -(826 + 46))) then if ((v76[v78[949 -(245 + 702) ]]<=v78[4]) or (885>=1031)) then v70=v70 + (3 -(2 + 0)) ;else v70=v78[1 + 2 ];end elseif (v79>(1923 -(32 + 228 + 1638))) then if ((3554>=525) and  not v76[v78[(528 -(84 + 2)) -(382 + 58) ]]) then v70=v70 + (3 -2) ;else v70=v78[3 + 0 ];end else v76[v78[3 -1 ]]();end elseif ((2414<=2972) and (v79<=(80 -53))) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[1208 -((1485 -583) + 303) ];end elseif ((3529<=3538) and (v79==28)) then do return;end else do return v76[v78[2]];end end elseif (v79<=(69 -37)) then if (v79<=(72 -42)) then local v150=0 + 0 ;local v151;while true do if (v150==(1690 -(1121 + 410 + 159))) then v151=v78[2];v76[v151]=v76[v151]();break;end end elseif ((v79>31) or (2861<458)) then v76[v78[216 -(22 + 192) ]][v78[686 -(483 + 200) ]]=v78[4];else v76[v78[1465 -(1404 + 59) ]]=v76[v78[3]] + v76[v78[10 -6 ]] ;end elseif ((1717<=4525) and (v79<=(43 -10))) then v59[v78[3]]=v76[v78[767 -(468 + 297) ]];elseif (v79>(596 -(334 + 228))) then v76[v78[6 -(846 -(497 + 345)) ]]=v59[v78[3]];else local v243=v78[2];local v244,v245=v69(v76[v243](v76[v243 + 1 ]));v71=(v245 + v243) -1 ;local v246=0 -0 ;for v341=v243,v71 do local v342=0 -(0 + 0) ;while true do if ((0 + 0)==v342) then v246=v246 + (237 -(141 + 95)) ;v76[v341]=v244[v246];break;end end end end elseif (v79<=41) then if (v79<=38) then if ((v79<=(36 + 0)) or (3178<=1524)) then v76[v78[4 -2 ]]=v76[v78[6 -3 ]] * v78[1 + 3 ] ;elseif (v79>(101 -64)) then v70=v78[3 + 0 ];else local v248=v78[2 + 0 ];local v249=v76[v78[4 -1 ]];v76[v248 + 1 + 0 + 0 ]=v249;v76[v248]=v249[v78[167 -(92 + 71) ]];end elseif (v79<=(20 + 19)) then if (v78[2]<v76[v78[6 -2 ]]) then v70=v70 + (766 -(574 + 191)) ;else v70=v78[3 + 0 ];end elseif (v79==40) then local v254=v78[4 -2 ];v76[v254](v76[v254 + 1 + 0 ]);else v76[v78[851 -(254 + 595) ]]=v59[v78[3]];end elseif (v79<=(170 -(55 + 71))) then if ((4254>370) and (v79<=42)) then if v76[v78[2 -0 ]] then v70=v70 + (1791 -(573 + 1217)) ;else v70=v78[8 -5 ];end elseif (v79==(4 + 39)) then v76[v78[2 -0 ]]=v76[v78[3]] + v76[v78[4]] ;else local v259=939 -(714 + 225) ;local v260;local v261;local v262;local v263;while true do if (v259==((1333 -(605 + 728)) -0)) then v260=v78[2 -0 ];v261,v262=v69(v76[v260](v13(v76,v260 + 1 + 0 ,v78[3 -(0 + 0) ])));v259=807 -(118 + 688) ;end if (v259==(50 -(25 + (50 -27)))) then for v409=v260,v71 do v263=v263 + 1 ;v76[v409]=v261[v263];end break;end if (v259==(1 + 0 + 0)) then v71=(v262 + v260) -1 ;v263=1886 -(927 + 959) ;v259=6 -4 ;end end end elseif ((v79<=((2872 -2095) -(16 + 716))) or (1635==1777)) then local v155=v67[v78[5 -2 ]];local v156;local v157={};v156=v10({},{__index=function(v187,v188) local v189=v157[v188];return v189[98 -(11 + 86) ][v189[4 -2 ]];end,__newindex=function(v190,v191,v192) local v193=285 -(175 + 110) ;local v194;while true do if (v193==(0 -0)) then v194=v157[v191];v194[4 -3 ][v194[2]]=v192;break;end end end});for v195=1797 -(503 + 1293) ,v78[4] do v70=v70 + (2 -1) ;local v196=v66[v70];if (v196[1]==(45 + 14 + 22)) then v157[v195-1 ]={v76,v196[1 + 2 ]};else v157[v195-(1 + 0) ]={v59,v196[2 + 1 ]};end v75[ #v75 + (534 -(43 + 490)) ]=v157;end v76[v78[2]]=v29(v155,v156,v60);elseif (v79==(779 -(711 + 22))) then v76[v78[2]][v78[11 -(1410 -(832 + 570)) ]]=v76[v78[863 -(240 + 619) ]];elseif v76[v78[2]] then v70=v70 + 1 + 0 ;else v70=v78[3];end elseif (v79<=(112 -41)) then if (v79<=(4 + 55)) then if (v79<=(1797 -(1267 + 77 + 400))) then if ((v79<=((119 + 336) -(255 + 150))) or (3338>=3993)) then if (v79<=(38 + 10)) then local v159=v78[2 + 0 ];local v160=v78[4];local v161=v159 + (8 -6) ;local v162={v76[v159](v76[v159 + (1740 -(404 + 1335)) ],v76[v161])};for v198=1,v160 do v76[v161 + v198 ]=v162[v198];end local v163=v162[407 -(183 + 223) ];if ((1154<=1475) and v163) then v76[v161]=v163;v70=v78[3];else v70=v70 + (1 -(0 -0)) ;end elseif (v79==49) then v76[v78[2 + 0 ]]();else v76[v78[1 + 1 ]][v78[3]]=v78[341 -(10 + 158 + 169) ];end elseif (v79<=(36 + 15)) then if (v78[340 -(118 + 220) ]<v76[v78[2 + 2 ]]) then v70=v70 + (450 -(108 + 341)) ;else v70=v78[2 + 1 ];end elseif (v79==(219 -167)) then v76[v78[1495 -(711 + 782) ]]=v76[v78[5 -(798 -(588 + 208)) ]] * v78[4] ;else local v272=v78[471 -(270 + 199) ];v76[v272]=v76[v272](v13(v76,v272 + 1 + 0 ,v78[1822 -((1563 -983) + 1239) ]));end elseif ((v79<=(166 -110)) or (2610<1230)) then if (v79<=54) then v76[v78[2 + 0 ]]=v78[1 + 2 ];elseif ((v79==(24 + 31)) or (1448==3083)) then v59[v78[3]]=v76[v78[4 -2 ]];elseif (v78[(1802 -(884 + 916)) + 0 ]==v76[v78[1171 -(645 + 522) ]]) then v70=v70 + 1 ;else v70=v78[1793 -(1010 + 780) ];end elseif (v79<=(57 + (0 -0))) then local v166=v78[2];v76[v166]=v76[v166](v13(v76,v166 + (4 -(2 + 1)) ,v71));elseif (v79==(169 -111)) then v76[v78[1838 -(1045 + (1444 -(232 + 421))) ]][v78[7 -4 ]]=v76[v78[5 -(1890 -(1569 + 320)) ]];else local v278=v78[507 -(351 + 154) ];local v279={v76[v278](v13(v76,v278 + 1 ,v71))};local v280=266 -(28 + 238) ;for v345=v278,v78[(2 + 6) -4 ] do v280=v280 + 1 + 0 ;v76[v345]=v279[v280];end end elseif (v79<=(1624 -(1381 + 178))) then if (v79<=(59 + 3)) then if (v79<=(49 + 11)) then local v168=0;local v169;local v170;local v171;while true do if ((3139>916) and (v168==(0 + (0 -0)))) then v169=v67[v78[(615 -(316 + 289)) -7 ]];v170=nil;v168=1 + 0 ;end if (v168==(471 -(381 + 89))) then v171={};v170=v10({},{__index=function(v376,v377) local v378=v171[v377];return v378[1 + 0 ][v378[2 + 0 ]];end,__newindex=function(v379,v380,v381) local v382=v171[v380];v382[1 -0 ][v382[1158 -(1074 + 82) ]]=v381;end});v168=3 -(1 + 0) ;end if (v168==2) then for v384=1785 -(214 + 1570) ,v78[1457 -(666 + 787) ] do v70=v70 + 1 ;local v385=v66[v70];if ((2954==2954) and (v385[1]==(1536 -(990 + (890 -(360 + 65)))))) then v171[v384-(1 + 0) ]={v76,v385[11 -8 ]};else v171[v384-(1727 -(1668 + 58)) ]={v59,v385[5 -2 ]};end v75[ #v75 + 1 ]=v171;end v76[v78[6 -4 ]]=v29(v169,v170,v60);break;end end elseif (v79==(29 + 32)) then local v281=v78[1 + 1 ];v76[v281]=v76[v281](v13(v76,v281 + 1 + (254 -(79 + 175)) ,v71));else local v283=0 -0 ;local v284;local v285;local v286;while true do if ((117<=2892) and ((1995 -(109 + 1885))==v283)) then v286=1469 -((2000 -731) + 200) ;for v414=v284,v78[7 -3 ] do local v415=815 -(98 + 717) ;while true do if (v415==0) then v286=v286 + 1 ;v76[v414]=v285[v286];break;end end end break;end if ((v283==(826 -(802 + 24))) or (453>4662)) then v284=v78[2 -0 ];v285={v76[v284](v13(v76,v284 + 1 ,v78[3]))};v283=1 -0 ;end end end elseif (v79<=(10 + 42 + 11)) then v76[v78[2 + 0 ]]={};elseif (v79>64) then v76[v78[(2 -1) + 1 ]]=v76[v78[3]][v78[1 + 3 ]];elseif (v76[v78[2]]==v78[11 -7 ]) then v70=v70 + (3 -2) ;else v70=v78[2 + (1 -0) ];end elseif ((1320>595) and (v79<=(28 + 40))) then if (v79<=(55 + 11)) then v76[v78[2]]={};elseif (v79==(966 -(503 + 396))) then local v289=0 + (181 -(92 + 89)) ;local v290;while true do if ((v289==(0 + 0)) or (3199<590)) then v290=v78[1435 -(797 + 636) ];v76[v290](v13(v76,v290 + (4 -3) ,v78[1622 -((2768 -1341) + 192) ]));break;end end else local v291=v78[2 + 1 ];local v292=v76[v291];for v350=v291 + (2 -1) ,v78[4] do v292=v292   .. v76[v350] ;end v76[v78[2]]=v292;end elseif ((v79<=(63 + 6)) or (4793<30)) then if ((v76[v78[1 + 1 ]]<v76[v78[4]]) or (1696<=1059)) then v70=v70 + 1 ;else v70=v78[(169 + 160) -(192 + 134) ];end elseif (v79==((797 + 549) -(316 + 960))) then local v295=v78[2];local v296,v297=v69(v76[v295](v13(v76,v295 + 1 + 0 ,v78[3 + 0 ])));v71=(v297 + v295) -1 ;local v298=(0 -0) + 0 ;for v351=v295,v71 do v298=v298 + (3 -2) ;v76[v351]=v296[v298];end else v76[v78[553 -(83 + 468) ]]=v76[v78[1809 -(1202 + 604) ]][v76[v78[18 -14 ]]];end elseif (v79<=(137 -54)) then if (v79<=(213 -136)) then if (v79<=74) then if (v79<=(397 -(45 + 39 + 241))) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + (2 -1) + 0 + 0 ;else v70=v78[3 + 0 ];end elseif (v79==(13 + 14 + 46)) then local v302=v78[5 -3 ];local v303=v76[v302];for v354=v302 + 1 + 0 ,v71 do v7(v303,v76[v354]);end else local v304=v78[2];v76[v304]=v76[v304](v76[v304 + 1 + 0 ]);end elseif (v79<=75) then local v174=0 -0 ;local v175;while true do if ((2343==2343) and (v174==((239 + 1672) -(340 + 1571)))) then v175=v78[1 + 1 ];do return v13(v76,v175,v175 + v78[3] );end break;end end elseif (v79==(1848 -(1733 + 39))) then do return v76[v78[5 -3 ]];end else do return;end end elseif (v79<=(1114 -(125 + 909))) then if (v79<=(2026 -(1096 + 852))) then v76[v78[1 + 1 ]]=v76[v78[3 -0 ]]/v78[4 + 0 ] ;elseif (v79>((900 -309) -(409 + 103))) then v76[v78[238 -(46 + 190) ]]=v76[v78[98 -(51 + 44) ]]/v78[(1246 -(485 + 759)) + 2 ] ;elseif ((v76[v78[2]]==v76[v78[4]]) or (1043>3591)) then v70=v70 + (1318 -((2577 -1463) + 203)) ;else v70=v78[729 -(228 + 498) ];end elseif (v79<=(18 + 63)) then v76[v78[2 + 0 ]]=v76[v78[666 -(174 + 489) ]];elseif ((v79==82) or (2890>=4079)) then local v307=v78[2];v76[v307]=v76[v307]();else for v356=v78[2],v78[3] do v76[v356]=nil;end end elseif ((4474<=4770) and (v79<=89)) then if (v79<=(223 -137)) then if (v79<=(1989 -(830 + 1075))) then local v179=524 -(303 + 221) ;local v180;while true do if (v179==0) then v180=v78[1271 -(231 + 1038) ];v76[v180](v13(v76,v180 + 1 + 0 ,v78[3]));break;end end elseif (v79==(1247 -((1360 -(442 + 747)) + 991))) then v76[v78[2]]=v60[v78[12 -9 ]];elseif ((v76[v78[(1140 -(832 + 303)) -3 ]]~=v76[v78[9 -(951 -(88 + 858)) ]]) or (4942==3903)) then v70=v70 + 1 + 0 ;else v70=v78[10 -7 ];end elseif ((v79<=(250 -163)) or (248>4845)) then v76[v78[(1 + 1) -0 ]]=v78[(8 + 1) -6 ];elseif (v79==(1336 -(111 + 1137))) then v76[v78[160 -(91 + 67) ]]=v76[v78[8 -5 ]] -v76[v78[1 + 1 + 2 ]] ;elseif (v78[525 -(423 + 100) ]==v76[v78[1 + 3 ]]) then v70=v70 + 1 ;else v70=v78[7 -4 ];end elseif ((1569==1569) and (v79<=(48 + 44))) then if ((v79<=(861 -(326 + 445))) or (4927<=3221)) then if ((v76[v78[8 -6 ]]==v78[8 -4 ]) or (1780>2787)) then v70=v70 + (2 -1) ;else v70=v78[714 -(530 + 181) ];end elseif (v79==(972 -(614 + 267))) then v76[v78[34 -(19 + (802 -(766 + 23))) ]]=v76[v78[4 -1 ]][v78[9 -5 ]];else v76[v78[(24 -19) -3 ]]=v60[v78[(1 -0) + 2 ]];end elseif (v79<=(165 -71)) then if (v79>(192 -99)) then v76[v78[1814 -((3406 -2113) + 519) ]]= not v76[v78[5 -2 ]];elseif (v76[v78[2]]==v76[v78[(30 -21) -5 ]]) then v70=v70 + (1 -0) ;else v70=v78[12 -9 ];end elseif ((v79==(223 -128)) or (3937<=1230)) then v76[v78[2 + 0 ]]= not v76[v78[1 + 2 ]];else v70=v78[6 -3 ];end v70=v70 + 1 + (1073 -(1036 + 37)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
